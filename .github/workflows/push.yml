name: CI/CD
on:
  push:
env:
  CI: true
  NODE_ENV: test
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_SYNCHRONIZE: true
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Cache
        uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile
      - name: Lint
        run: yarn lint
      - name: Compile typescript
        run: yarn lint:compile
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: "12"
          postgresql db: ${{ secrets.POSTGRES_DB }}
          postgresql user: ${{ secrets.POSTGRES_USER }}
          postgresql password: ${{ secrets.POSTGRES_PASSWORD }}
      - name: Run tests
        if: |
          github.ref != 'refs/heads/master'
        run: yarn test
      - name: Run e2e tests
        if: github.ref != 'refs/heads/master'
        run: yarn test:e2e
      - name: Run tests coverage
        if: github.ref == 'refs/heads/master'
        run: yarn test:cov
      - name: Upload coverage as artifact
        uses: actions/upload-artifact@v1
        if: github.ref == 'refs/heads/master'
        with:
          name: coverage
          path: coverage/lcov.info

  publish_release:
    name: Create new release version
    runs-on: ubuntu-latest
    needs: test
    if: contains(github.ref, 'master') || contains(github.ref, 'production')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-node@v1
        with:
          node-version: "12"
      - uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
        run: yarn semantic-release

  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    if: endsWith(github.ref, 'main') ||
        endsWith(github.ref, 'production')
    env:
      CI: true
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Setup
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Load node_modules from cache
        uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/yarn.lock') }}
      - name: serverless deploy
        if: endsWith(github.ref, 'main') ||
            endsWith(github.ref, 'production')
        run: |
          yarn serverless config
          yarn serverless deploy --stage ${GITHUB_REF##*/}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          NODE_ENV: production